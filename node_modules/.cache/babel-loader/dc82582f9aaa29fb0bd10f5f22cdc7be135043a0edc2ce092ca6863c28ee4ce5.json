{"ast":null,"code":"import * as utils from '../../utilities/utils.js';\nrequire('dotenv').config();\nconst {\n  formatDate,\n  generateRandomID,\n  calcTotal\n} = utils;\n\n// export const CreateNewInvoices = (newItems, editedForm, status) => {\n//     editedForm.items = newItems;\n//     editedForm.status = status;\n//     editedForm.createdAt = formatDate(new Date());\n//     editedForm.id = generateRandomID(5);\n\n//     editedForm.total = calcTotal(newItems);\n// };\n\n// export const StoreNewInvoice = (editedForm) => {\n//     // Retrieve the existing array from localStorage\n//     const existingArray = localStorage.getItem('invoices');\n\n//     let newArray = [];\n\n//     if (existingArray) {\n//         // If the array exists, parse it from JSON\n//         newArray = JSON.parse(existingArray);\n//     }\n\n//     // Append the new object to the array\n//     newArray.push(editedForm);\n\n//     // Store the updated array back in localStorage\n//     localStorage.setItem('invoices', JSON.stringify(newArray));\n//     return true;\n// };\n\n// export const StoreEditInvoice = (id, editedForm) => {\n//   // Get the existing invoices array from localStorage\n//   const invoicesJSON = localStorage.getItem('invoices');\n\n//   // Parse the JSON data to get the array of objects\n//   const invoices = JSON.parse(invoicesJSON);\n\n//   // Find the index of the object with the matching ID\n//   const index = invoices.findIndex(invoice => invoice.id === id);\n\n//   if (index !== -1) {\n//     // Replace the old object with the new one\n//     invoices[index] = editedForm;\n\n//     // Convert the updated array back to JSON\n//     const updatedInvoicesJSON = JSON.stringify(invoices);\n\n//     // Update the 'invoices' key in localStorage\n//     localStorage.setItem('invoices', updatedInvoicesJSON);\n\n//     console.log(`Invoice with ID '${id}' replaced.`);\n//     return true;\n//   } else {\n//     console.log(`Invoice with ID '${id}' not found.`);\n//   }\n// };\n\n// export const DeleteStoredItem = (id) => {\n//     try {\n//       // Get the existing invoices array from localStorage\n//       const invoicesJSON = localStorage.getItem('invoices');\n//       if (!invoicesJSON) {\n//         // If the 'invoices' key doesn't exist, nothing to delete\n//         return;\n//       }\n\n//       // Parse the JSON string to an array\n//       const invoicesArray = JSON.parse(invoicesJSON);\n\n//       // Find the index of the object with the matching id\n//       const indexToDelete = invoicesArray.findIndex(item => item.id === id);\n\n//       if (indexToDelete !== -1) {\n//         // If the index is found, remove the object from the array\n//         invoicesArray.splice(indexToDelete, 1);\n\n//         // Update the array in localStorage\n//         localStorage.setItem('invoices', JSON.stringify(invoicesArray));\n//       }\n//     } catch (error) {\n//       console.error('Error deleting item:', error);\n//     }\n//   };\n\n// export const GetAllInvoices = () => {\n//     return JSON.parse(localStorage.getItem('invoices'));  \n// };\n\n// Basic example of adding invoice to mysql table","map":{"version":3,"names":["utils","require","config","formatDate","generateRandomID","calcTotal"],"sources":["C:/Users/Memo/Documents/Full-Stack/HTML-CSS-Tutorialk/invoice-app/invoice-app/src/Components/InvoiceDetails/NewInvoices.mjs"],"sourcesContent":["import * as utils from '../../utilities/utils.js';\r\nrequire('dotenv').config();\r\n\r\nconst { formatDate, generateRandomID, calcTotal } = utils;\r\n\r\n// export const CreateNewInvoices = (newItems, editedForm, status) => {\r\n//     editedForm.items = newItems;\r\n//     editedForm.status = status;\r\n//     editedForm.createdAt = formatDate(new Date());\r\n//     editedForm.id = generateRandomID(5);\r\n\r\n//     editedForm.total = calcTotal(newItems);\r\n// };\r\n\r\n// export const StoreNewInvoice = (editedForm) => {\r\n//     // Retrieve the existing array from localStorage\r\n//     const existingArray = localStorage.getItem('invoices');\r\n\r\n//     let newArray = [];\r\n\r\n//     if (existingArray) {\r\n//         // If the array exists, parse it from JSON\r\n//         newArray = JSON.parse(existingArray);\r\n//     }\r\n\r\n//     // Append the new object to the array\r\n//     newArray.push(editedForm);\r\n\r\n//     // Store the updated array back in localStorage\r\n//     localStorage.setItem('invoices', JSON.stringify(newArray));\r\n//     return true;\r\n// };\r\n\r\n// export const StoreEditInvoice = (id, editedForm) => {\r\n//   // Get the existing invoices array from localStorage\r\n//   const invoicesJSON = localStorage.getItem('invoices');\r\n  \r\n//   // Parse the JSON data to get the array of objects\r\n//   const invoices = JSON.parse(invoicesJSON);\r\n  \r\n//   // Find the index of the object with the matching ID\r\n//   const index = invoices.findIndex(invoice => invoice.id === id);\r\n  \r\n//   if (index !== -1) {\r\n//     // Replace the old object with the new one\r\n//     invoices[index] = editedForm;\r\n    \r\n//     // Convert the updated array back to JSON\r\n//     const updatedInvoicesJSON = JSON.stringify(invoices);\r\n    \r\n//     // Update the 'invoices' key in localStorage\r\n//     localStorage.setItem('invoices', updatedInvoicesJSON);\r\n    \r\n//     console.log(`Invoice with ID '${id}' replaced.`);\r\n//     return true;\r\n//   } else {\r\n//     console.log(`Invoice with ID '${id}' not found.`);\r\n//   }\r\n// };\r\n\r\n// export const DeleteStoredItem = (id) => {\r\n//     try {\r\n//       // Get the existing invoices array from localStorage\r\n//       const invoicesJSON = localStorage.getItem('invoices');\r\n//       if (!invoicesJSON) {\r\n//         // If the 'invoices' key doesn't exist, nothing to delete\r\n//         return;\r\n//       }\r\n  \r\n//       // Parse the JSON string to an array\r\n//       const invoicesArray = JSON.parse(invoicesJSON);\r\n  \r\n//       // Find the index of the object with the matching id\r\n//       const indexToDelete = invoicesArray.findIndex(item => item.id === id);\r\n  \r\n//       if (indexToDelete !== -1) {\r\n//         // If the index is found, remove the object from the array\r\n//         invoicesArray.splice(indexToDelete, 1);\r\n  \r\n//         // Update the array in localStorage\r\n//         localStorage.setItem('invoices', JSON.stringify(invoicesArray));\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error deleting item:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n// export const GetAllInvoices = () => {\r\n//     return JSON.parse(localStorage.getItem('invoices'));  \r\n// };\r\n\r\n\r\n\r\n// Basic example of adding invoice to mysql table\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,0BAA0B;AACjDC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAE1B,MAAM;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,GAAGL,KAAK;;AAEzD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}