{"ast":null,"code":"/* Dealing with refreshes and storing data locally */\n\n/* If form is changing senderAddress, this function updates it \r\n    pre: value is a string\r\n    post: localStorage changes senderAddress of this form\r\n*/\nexport const changeSenderAddress = value => {\n  if (typeof value === 'string') {\n    _setJSONData('senderAddress', value);\n  }\n};\n\n/* If form is changing clientAddress, this function updates it \r\n    pre: value is a string\r\n    post: localStorage changes senderAddress of this form\r\n*/\nexport const changeClientAddress = value => {\n  if (typeof value === 'string') {\n    // Retrieve the JSON data from localStorage\n    _setJSONData('clientAddress', value);\n  }\n};\nconst _setJSONData = (typeAddress, value) => {\n  const jsonData = localStorage.getItem(typeAddress);\n  // Parse the JSON data into an object\n  const parsedData = JSON.parse(jsonData);\n\n  // Modify the \"street\" field\n  parsedData.senderAddress.street = value;\n\n  // Convert the modified object back to JSON\n  const modifiedJsonData = JSON.stringify(parsedData);\n\n  // Update the JSON data in localStorage\n  localStorage.setItem(typeAddress, modifiedJsonData);\n};","map":{"version":3,"names":["changeSenderAddress","value","_setJSONData","changeClientAddress","typeAddress","jsonData","localStorage","getItem","parsedData","JSON","parse","senderAddress","street","modifiedJsonData","stringify","setItem"],"sources":["C:/Users/Memo/Documents/Full-Stack/HTML-CSS-Tutorialk/invoice-app/invoice-app/src/Components/FormEditing/FormLoading.js"],"sourcesContent":["/* Dealing with refreshes and storing data locally */\r\n\r\n\r\n/* If form is changing senderAddress, this function updates it \r\n    pre: value is a string\r\n    post: localStorage changes senderAddress of this form\r\n*/\r\nexport const changeSenderAddress = (value) => {\r\n    if ((typeof value) === 'string') {\r\n        _setJSONData('senderAddress', value);        \r\n    }\r\n};\r\n\r\n\r\n/* If form is changing clientAddress, this function updates it \r\n    pre: value is a string\r\n    post: localStorage changes senderAddress of this form\r\n*/\r\nexport const changeClientAddress = (value) => {\r\n    if ((typeof value) === 'string') {\r\n        // Retrieve the JSON data from localStorage\r\n        _setJSONData('clientAddress', value);\r\n    }\r\n};\r\n\r\n\r\nconst _setJSONData = (typeAddress, value) => {\r\n    const jsonData = localStorage.getItem(typeAddress);\r\n    // Parse the JSON data into an object\r\n    const parsedData = JSON.parse(jsonData);\r\n\r\n    // Modify the \"street\" field\r\n    parsedData.senderAddress.street = value;\r\n\r\n    // Convert the modified object back to JSON\r\n    const modifiedJsonData = JSON.stringify(parsedData);\r\n\r\n    // Update the JSON data in localStorage\r\n    localStorage.setItem(typeAddress, modifiedJsonData);\r\n}\r\n\r\n\r\n"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,mBAAmB,GAAIC,KAAK,IAAK;EAC1C,IAAK,OAAOA,KAAK,KAAM,QAAQ,EAAE;IAC7BC,YAAY,CAAC,eAAe,EAAED,KAAK,CAAC;EACxC;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA,OAAO,MAAME,mBAAmB,GAAIF,KAAK,IAAK;EAC1C,IAAK,OAAOA,KAAK,KAAM,QAAQ,EAAE;IAC7B;IACAC,YAAY,CAAC,eAAe,EAAED,KAAK,CAAC;EACxC;AACJ,CAAC;AAGD,MAAMC,YAAY,GAAGA,CAACE,WAAW,EAAEH,KAAK,KAAK;EACzC,MAAMI,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAACH,WAAW,CAAC;EAClD;EACA,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;;EAEvC;EACAG,UAAU,CAACG,aAAa,CAACC,MAAM,GAAGX,KAAK;;EAEvC;EACA,MAAMY,gBAAgB,GAAGJ,IAAI,CAACK,SAAS,CAACN,UAAU,CAAC;;EAEnD;EACAF,YAAY,CAACS,OAAO,CAACX,WAAW,EAAES,gBAAgB,CAAC;AACvD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}